(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{116:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),l=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?a.a.createElement(f,u(u({ref:t},i),{},{components:n})):a.a.createElement(f,u({ref:t},i))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:r,c[1]=u;for(var i=2;i<o;i++)c[i]=n[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),o=(n(0),n(116)),c={id:"usage",title:"Usage",sidebar_label:"Usage",slug:"/usage"},u={unversionedId:"usage",id:"usage",isDocsHomePage:!1,title:"Usage",description:"Setup",source:"@site/docs/usage.md",slug:"/usage",permalink:"/use-redux-states/docs/next/usage",editUrl:"https://github.com/myckhel/use-redux-states/edit/master/redux-state/docs/usage.md",version:"current",sidebar_label:"Usage",sidebar:"someSidebar",previous:{title:"Installation",permalink:"/use-redux-states/docs/next/install"},next:{title:"using redux state",permalink:"/use-redux-states/docs/next/guides/using-redux-state"}},s=[{value:"<code>Setup</code>",id:"setup",children:[]},{value:"<code>Basic Usage</code>",id:"basic-usage",children:[]}],i={toc:s};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"setup"},Object(o.b)("inlineCode",{parentName:"h2"},"Setup")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { createStore } from 'redux'\nimport yourReducer1 from './yourReducer1'\nimport yourReducer2 from './yourReducer2'\nimport { setConfig, mergeReducers } from 'use-redux-states'\n\nconst appReducer = mergeReducers({ yourReducer1, yourReducer2 })\n\nconst store = createStore(appReducer)\nsetConfig({cleanup: false})\n")),Object(o.b)("h2",{id:"basic-usage"},Object(o.b)("inlineCode",{parentName:"h2"},"Basic Usage")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { Component } from 'react'\n\nimport { useReduxState, useMemoSelector } from 'use-redux-states'\n\nconst Usage = () => {\n  const { selector, setState } = useReduxState('component_state', {\n    /* initial states */\n    count: 1,\n    locale: 'en_US'\n  })\n\n  const { locale, count } = useMemoSelector(selector)\n\n  return (\n    <div>\n      <h6>Current Count: {count}</h6>\n      <input\n        onChange={({ target: { value: locale } }) => setState({locale})}\n        value={locale}\n      />\n      <button\n        onClick={() =>\n          setState((prevState) => ({ ...prevState, count: count + 1 }))\n        }\n      >\n        Increment Count\n      </button>\n    </div>\n  )\n}\n")))}l.isMDXComponent=!0}}]);