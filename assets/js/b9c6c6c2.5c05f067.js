(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{103:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return i}));var a=n(3),r=n(7),o=(n(0),n(116)),s={id:"use-redux-state",title:"useReduxState()"},u={unversionedId:"apis/hooks/use-redux-state",id:"apis/hooks/use-redux-state",isDocsHomePage:!1,title:"useReduxState()",description:"This hook allows to create redux state at runtime.",source:"@site/docs/apis/hooks/use-redux-state.md",slug:"/apis/hooks/use-redux-state",permalink:"/use-redux-state-hook/docs/next/apis/hooks/use-redux-state",editUrl:"https://github.com/myckhel/use-redux-state-hook/edit/master/redux-state/docs/apis/hooks/use-redux-state.md",version:"current",sidebar:"someSidebar",previous:{title:"Usage With Redux Toolkit",permalink:"/use-redux-state-hook/docs/next/usage-with-redux-toolkit"},next:{title:"useMemoSelector()",permalink:"/use-redux-state-hook/docs/next/apis/hooks/use-memo-selector"}},c=[{value:"<code>returns{}</code>",id:"returns",children:[]},{value:"<code>config</code>",id:"config",children:[{value:"<strong>name&#39;&#39;</strong>",id:"name",children:[]},{value:"<strong>state?</strong>",id:"state",children:[]},{value:"<strong>reducer()?</strong>",id:"reducer",children:[]},{value:"<strong>unmount?</strong>",id:"unmount",children:[]},{value:"<strong>cleanup?</strong>",id:"cleanup",children:[]}]},{value:"<code>Example</code>",id:"example",children:[]}],l={toc:c};function i(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This hook allows to create redux state at runtime."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"useReduxState(stateName?: string, state?: any)\n")),Object(o.b)("p",null,"or"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"useReduxState(config?: {\n  name?: string, // nested state name\n  state?: any, // initial state\n  reducer?: (storeState, initialState) => mergedState\n})\n")),Object(o.b)("h3",{id:"returns"},Object(o.b)("inlineCode",{parentName:"h3"},"returns{}")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/use-redux-state-hook/docs/next/apis/selector"},"selector")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/use-redux-state-hook/docs/next/apis/set-state"},"setState")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/use-redux-state-hook/docs/next/apis/get-state"},"getState")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/use-redux-state-hook/docs/next/apis/action"},"action")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"/use-redux-state-hook/docs/next/apis/cleanup"},"cleanup")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"use-memo-selector"},"useMemoSelector"))),Object(o.b)("h2",{id:"config"},Object(o.b)("inlineCode",{parentName:"h2"},"config")),Object(o.b)("h3",{id:"name"},Object(o.b)("strong",{parentName:"h3"},"name''")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"type:")," string\n",Object(o.b)("strong",{parentName:"p"},"default:")," Date().getTime() ",Object(o.b)("br",null),"\nnestable key name of the redux state"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"useReduxState({ name: 'state.name', state: 'Mike' })\n// creates nested state in the store {state: {name: 'Mike'}}\n")),Object(o.b)("h3",{id:"state"},Object(o.b)("strong",{parentName:"h3"},"state?")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"type:")," any ",Object(o.b)("br",null),"\ninitial state"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"useReduxState({ name: 'state.name', state: 'Mike' })\n// creates nested state in the store {state: {name: 'Mike'}}\n")),Object(o.b)("h3",{id:"reducer"},Object(o.b)("strong",{parentName:"h3"},"reducer()?")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"type:")," function ",Object(o.b)("br",null),"\nfunction that takes the current ",Object(o.b)("inlineCode",{parentName:"p"},"state")," for the given name, ",Object(o.b)("inlineCode",{parentName:"p"},"payload")," and returns computed new state.\nthis function runs once during the initialization of the state\nuse the function when you want to manually handle how the state should be created/updated."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"useReduxState({ name: 'state.name', state: { is: 'Mike' } })\n// {state: {name: {is: 'Mike'}}}\n\nuseReduxState({\n  name: 'state.name',\n  state: { and: 'Redux' },\n  reducer: (currentState, payload) => ({ ...currentState, ...payload })\n})\n")),Object(o.b)("p",null,"in the above example\nreducer had prevented from over-writing the store state when there is an existing value for the state.\ninstead of:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"{\n  state: {\n    name: {\n      and: 'Redux'\n    }\n  }\n}\n")),Object(o.b)("p",null,"we got:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"{state: {name: {is: 'Mike', and: 'Redux'}}}\n")),Object(o.b)("h3",{id:"unmount"},Object(o.b)("strong",{parentName:"h3"},"unmount?")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"type:")," boolean\n",Object(o.b)("strong",{parentName:"p"},"default:")," false"),Object(o.b)("p",null,"determines whether redux state should mount"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"useReduxState({ unmount: true, name: 'state.name', state: 'Mike' })\n// store undefined\nuseReduxState({ unmount: false, name: 'state.name', state: 'Mike' })\n// {state: {name: 'Mike'}}\n")),Object(o.b)("h3",{id:"cleanup"},Object(o.b)("strong",{parentName:"h3"},"cleanup?")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"type:")," boolean"),Object(o.b)("p",null,"determines whether redux state should cleanup the state when component unmounted from view."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const { getState } = useReduxState({\n  cleanup: true,\n  name: 'state.name',\n  state: 'Mike'\n})\n\nuseEffect(() => {\n  console.log(getState()) // {state: {name: 'Mike'}}\n  return () => console.log(getState()) // undefined\n}, [])\n")),Object(o.b)("h2",{id:"example"},Object(o.b)("inlineCode",{parentName:"h2"},"Example")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"import React, { useEffect } from 'react'\nimport { View, StyleSheet, Button, Alert } from 'react-native'\nimport useReduxState from 'use-redux-state-hook'\n\nconst App = () => {\n  const {\n    selector,\n    useMemoSelector,\n    getState,\n    cleanup,\n    setState\n  } = useReduxState({\n    /* nestable state name */\n    name: 'state.name',\n    /* initial component state */\n    state: {\n      count: 1,\n      locale: 'en_US'\n    },\n    /* if state !exists overwrite with payload */\n    reducer: (state, payload) => state || payload,\n    /* whether state should be mounted */\n    unmount: false\n  })\n\n  const { count, locale } = useMemoSelector(selector, (state) => state)\n\n  useEffect(() => {\n    /* delete the state when component unmount from tree */\n    return () => cleanup()\n  }, [])\n\n  return (\n    <Button onPress={() => setState({ count: count + 1 })}>\n      <Text>\n        {count}, {locale}\n      </Text>\n    </Button>\n  )\n}\nexport default App\n")))}i.isMDXComponent=!0},116:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),i=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},p=function(e){var t=i(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=i(n),d=a,m=p["".concat(s,".").concat(d)]||p[d]||b[d]||o;return n?r.a.createElement(m,u(u({ref:t},l),{},{components:n})):r.a.createElement(m,u({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,s[1]=u;for(var l=2;l<o;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);